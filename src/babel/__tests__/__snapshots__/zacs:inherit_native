// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`zacs example: zacs:inherit, native 1`] = `
"const zacsReactNative = require('react-native');
const ZACS_RN_Text = zacsReactNative.Text;
const ZACS_RN_View = zacsReactNative.View;
const stylableBlank = <ZACS_RN_View __zacs_original_name="StylableBlank" style={props.style} />;
const stylableMain = <ZACS_RN_Text __zacs_original_name="StylableMain" style={[style.main].concat(props.style || [])} />;
const stylableMain_highlighted = <ZACS_RN_Text __zacs_original_name="StylableMain" style={[style.main, style.highlighted].concat(props.style || [])} />;
const stylableMain_color = <ZACS_RN_Text __zacs_original_name="StylableMain" style={[style.main, {
  color: "red"
}].concat(props.style || [])} />;
const stylableMain_colorAlt = <ZACS_RN_Text __zacs_original_name="StylableMain" style={[style.main, {
  color: 'red'
}].concat(props.style || [])} />;
const stylableMain_all = <ZACS_RN_Text __zacs_original_name="StylableMain" style={[style.main, style.highlighted, {
  color: "red"
}].concat(props.style || [])} />;
const stylableMain_splat = <ZACS_RN_Text __zacs_original_name="StylableMain" style={[style.main].concat(props.style || [])} {...props} />; // dangerous territory!

export const StylableButton = props => {
  const {
    title,
    isHighlighted,
    color
  } = props;
  return <ZACS_RN_Text __zacs_original_name="StylableMain" style={[style.main, isHighlighted && style.highlighted, {
    color: factoryColor(color)
  }].concat(props.style || [])}>
      {title}
    </ZACS_RN_Text>;
};

// second-order stylable component (no zacs definition)
const ImportedComponent = require('ImportedComponent');
const stylable2nd = <ImportedComponent style={props.style} />;"
`;
