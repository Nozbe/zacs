// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`zacs example: zacs:inherit, web 1`] = `
"/* eslint-disable */

const stylableBlank = <div __zacs_original_name="StylableBlank" className={props.className} style={props.style} />;
const stylableMain = <span __zacs_original_name="StylableMain" className={style.main + (" " + (props.className || ""))} style={props.style} />;
const stylableMain_highlighted = <span __zacs_original_name="StylableMain" className={style.main + (" " + style.highlighted) + (" " + (props.className || ""))} style={props.style} />;
const stylableMain_color = <span __zacs_original_name="StylableMain" className={style.main + (" " + (props.className || ""))} style={Object.assign({
  color: "red"
}, props.style)} />;
const stylableMain_colorAlt = <span __zacs_original_name="StylableMain" className={style.main + (" " + (props.className || ""))} style={Object.assign({
  color: 'red'
}, props.style)} />;
const stylableMain_all = <span __zacs_original_name="StylableMain" className={style.main + (" " + style.highlighted) + (" " + (props.className || ""))} style={Object.assign({
  color: "red"
}, props.style)} />;
const stylableMain_splat = <span __zacs_original_name="StylableMain" className={style.main + (" " + (props.className || ""))} style={props.style} {...props} />; // dangerous territory!

export const StylableButton = props => {
  const {
    title,
    isHighlighted,
    color
  } = props;
  return <span __zacs_original_name="StylableMain" className={style.main + (isHighlighted ? " " + style.highlighted : "") + (" " + (props.className || ""))} style={Object.assign({
    color: factoryColor(color)
  }, props.style)}>
      {title}
    </span>;
};

// second-order stylable component (no zacs definition)
const ImportedComponent = require('ImportedComponent');
const stylable2nd = <ImportedComponent style={props.style} className={props.className} />;"
`;
